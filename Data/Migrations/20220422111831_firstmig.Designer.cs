// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Data.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220422111831_firstmig")]
    partial class firstmig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClientDocument", b =>
                {
                    b.Property<int>("ClientsClientId")
                        .HasColumnType("int");

                    b.Property<int>("DocumentsKey")
                        .HasColumnType("int");

                    b.HasKey("ClientsClientId", "DocumentsKey");

                    b.HasIndex("DocumentsKey");

                    b.ToTable("ClientDocument");
                });

            modelBuilder.Entity("Domain.Entities.Categorie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CodeReductionActif")
                        .HasColumnType("bit");

                    b.Property<double>("CoefDuree")
                        .HasColumnType("float");

                    b.Property<double>("CoefTarif")
                        .HasColumnType("float");

                    b.Property<double>("Cotisation")
                        .HasColumnType("float");

                    b.Property<int>("NbEmpruntsMax")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Domain.Entities.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("CodeRedusction")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("datetime2");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MediathequeKey")
                        .HasColumnType("int");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MediathequeKey");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Domain.Entities.Document", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Annee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Auteur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MediathequeKey")
                        .HasColumnType("int");

                    b.Property<string>("Titre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.HasIndex("MediathequeKey");

                    b.ToTable("Documents");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Document");
                });

            modelBuilder.Entity("Domain.Entities.Emprunt", b =>
                {
                    b.Property<DateTime>("DateEmprunt")
                        .HasColumnType("datetime2");

                    b.Property<int>("key")
                        .HasColumnType("int");

                    b.Property<int>("ClientFk")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateLimite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRappel")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRetour")
                        .HasColumnType("datetime2");

                    b.Property<int>("DocumentFk")
                        .HasColumnType("int");

                    b.Property<double>("Tarif")
                        .HasColumnType("float");

                    b.HasKey("DateEmprunt", "key");

                    b.HasIndex("ClientFk");

                    b.HasIndex("DocumentFk");

                    b.ToTable("Emprunts");
                });

            modelBuilder.Entity("Domain.Entities.Mediatheque", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("Mediatheques");
                });

            modelBuilder.Entity("Domain.Entities.Audio", b =>
                {
                    b.HasBaseType("Domain.Entities.Document");

                    b.Property<string>("Classification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duree")
                        .HasColumnType("int");

                    b.Property<double>("Tarif")
                        .HasColumnType("float");

                    b.HasDiscriminator().HasValue("Audio");
                });

            modelBuilder.Entity("Domain.Entities.Livre", b =>
                {
                    b.HasBaseType("Domain.Entities.Document");

                    b.Property<int>("Duree")
                        .HasColumnType("int")
                        .HasColumnName("Livre_Duree");

                    b.Property<int>("NbPage")
                        .HasColumnType("int");

                    b.Property<string>("Resume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Tarif")
                        .HasColumnType("float")
                        .HasColumnName("Livre_Tarif");

                    b.HasDiscriminator().HasValue("Livre");
                });

            modelBuilder.Entity("Domain.Entities.Video", b =>
                {
                    b.HasBaseType("Domain.Entities.Document");

                    b.Property<int>("Duree")
                        .HasColumnType("int")
                        .HasColumnName("Video_Duree");

                    b.Property<int>("DureeFilm")
                        .HasColumnType("int");

                    b.Property<string>("MentionLegale")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Tarif")
                        .HasColumnType("float")
                        .HasColumnName("Video_Tarif");

                    b.HasDiscriminator().HasValue("Video");
                });

            modelBuilder.Entity("ClientDocument", b =>
                {
                    b.HasOne("Domain.Entities.Client", null)
                        .WithMany()
                        .HasForeignKey("ClientsClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Document", null)
                        .WithMany()
                        .HasForeignKey("DocumentsKey")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entities.Client", b =>
                {
                    b.HasOne("Domain.Entities.Categorie", "Categorie")
                        .WithMany("Clients")
                        .HasForeignKey("CategoryId");

                    b.HasOne("Domain.Entities.Mediatheque", "Mediatheque")
                        .WithMany("Clients")
                        .HasForeignKey("MediathequeKey");

                    b.Navigation("Categorie");

                    b.Navigation("Mediatheque");
                });

            modelBuilder.Entity("Domain.Entities.Document", b =>
                {
                    b.HasOne("Domain.Entities.Mediatheque", "Mediatheque")
                        .WithMany("Documents")
                        .HasForeignKey("MediathequeKey");

                    b.Navigation("Mediatheque");
                });

            modelBuilder.Entity("Domain.Entities.Emprunt", b =>
                {
                    b.HasOne("Domain.Entities.Client", "Client")
                        .WithMany("Emprunts")
                        .HasForeignKey("ClientFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Document", "Document")
                        .WithMany("Emprunts")
                        .HasForeignKey("DocumentFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Document");
                });

            modelBuilder.Entity("Domain.Entities.Categorie", b =>
                {
                    b.Navigation("Clients");
                });

            modelBuilder.Entity("Domain.Entities.Client", b =>
                {
                    b.Navigation("Emprunts");
                });

            modelBuilder.Entity("Domain.Entities.Document", b =>
                {
                    b.Navigation("Emprunts");
                });

            modelBuilder.Entity("Domain.Entities.Mediatheque", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
